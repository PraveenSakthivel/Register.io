// source: dbRequests.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.dbRequests.AddStatus', null, global);
goog.exportSymbol('proto.dbRequests.AddStatusResponse', null, global);
goog.exportSymbol('proto.dbRequests.Class', null, global);
goog.exportSymbol('proto.dbRequests.ClassAddStatusParams', null, global);
goog.exportSymbol('proto.dbRequests.ClassesResponse', null, global);
goog.exportSymbol('proto.dbRequests.DepartmentsResponse', null, global);
goog.exportSymbol('proto.dbRequests.Meeting', null, global);
goog.exportSymbol('proto.dbRequests.ReceiveClassesParams', null, global);
goog.exportSymbol('proto.dbRequests.ReceiveDepartmentsParams', null, global);
goog.exportSymbol('proto.dbRequests.Section', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dbRequests.ReceiveDepartmentsParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dbRequests.ReceiveDepartmentsParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dbRequests.ReceiveDepartmentsParams.displayName = 'proto.dbRequests.ReceiveDepartmentsParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dbRequests.DepartmentsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dbRequests.DepartmentsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dbRequests.DepartmentsResponse.displayName = 'proto.dbRequests.DepartmentsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dbRequests.ClassAddStatusParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dbRequests.ClassAddStatusParams.repeatedFields_, null);
};
goog.inherits(proto.dbRequests.ClassAddStatusParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dbRequests.ClassAddStatusParams.displayName = 'proto.dbRequests.ClassAddStatusParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dbRequests.AddStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dbRequests.AddStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dbRequests.AddStatusResponse.displayName = 'proto.dbRequests.AddStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dbRequests.ReceiveClassesParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dbRequests.ReceiveClassesParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dbRequests.ReceiveClassesParams.displayName = 'proto.dbRequests.ReceiveClassesParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dbRequests.ClassesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dbRequests.ClassesResponse.repeatedFields_, null);
};
goog.inherits(proto.dbRequests.ClassesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dbRequests.ClassesResponse.displayName = 'proto.dbRequests.ClassesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dbRequests.Class = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dbRequests.Class.repeatedFields_, null);
};
goog.inherits(proto.dbRequests.Class, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dbRequests.Class.displayName = 'proto.dbRequests.Class';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dbRequests.Section = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dbRequests.Section.repeatedFields_, null);
};
goog.inherits(proto.dbRequests.Section, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dbRequests.Section.displayName = 'proto.dbRequests.Section';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dbRequests.Meeting = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dbRequests.Meeting, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dbRequests.Meeting.displayName = 'proto.dbRequests.Meeting';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dbRequests.ReceiveDepartmentsParams.prototype.toObject = function(opt_includeInstance) {
  return proto.dbRequests.ReceiveDepartmentsParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dbRequests.ReceiveDepartmentsParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dbRequests.ReceiveDepartmentsParams.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dbRequests.ReceiveDepartmentsParams}
 */
proto.dbRequests.ReceiveDepartmentsParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dbRequests.ReceiveDepartmentsParams;
  return proto.dbRequests.ReceiveDepartmentsParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dbRequests.ReceiveDepartmentsParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dbRequests.ReceiveDepartmentsParams}
 */
proto.dbRequests.ReceiveDepartmentsParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dbRequests.ReceiveDepartmentsParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dbRequests.ReceiveDepartmentsParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dbRequests.ReceiveDepartmentsParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dbRequests.ReceiveDepartmentsParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dbRequests.DepartmentsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.dbRequests.DepartmentsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dbRequests.DepartmentsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dbRequests.DepartmentsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    departmentsMap: (f = msg.getDepartmentsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dbRequests.DepartmentsResponse}
 */
proto.dbRequests.DepartmentsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dbRequests.DepartmentsResponse;
  return proto.dbRequests.DepartmentsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dbRequests.DepartmentsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dbRequests.DepartmentsResponse}
 */
proto.dbRequests.DepartmentsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getDepartmentsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readString, null, 0, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dbRequests.DepartmentsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dbRequests.DepartmentsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dbRequests.DepartmentsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dbRequests.DepartmentsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDepartmentsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * map<int32, string> departments = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,string>}
 */
proto.dbRequests.DepartmentsResponse.prototype.getDepartmentsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.dbRequests.DepartmentsResponse} returns this
 */
proto.dbRequests.DepartmentsResponse.prototype.clearDepartmentsMap = function() {
  this.getDepartmentsMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dbRequests.ClassAddStatusParams.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dbRequests.ClassAddStatusParams.prototype.toObject = function(opt_includeInstance) {
  return proto.dbRequests.ClassAddStatusParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dbRequests.ClassAddStatusParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dbRequests.ClassAddStatusParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, ""),
    indexList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dbRequests.ClassAddStatusParams}
 */
proto.dbRequests.ClassAddStatusParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dbRequests.ClassAddStatusParams;
  return proto.dbRequests.ClassAddStatusParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dbRequests.ClassAddStatusParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dbRequests.ClassAddStatusParams}
 */
proto.dbRequests.ClassAddStatusParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dbRequests.ClassAddStatusParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dbRequests.ClassAddStatusParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dbRequests.ClassAddStatusParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dbRequests.ClassAddStatusParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIndexList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.dbRequests.ClassAddStatusParams.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dbRequests.ClassAddStatusParams} returns this
 */
proto.dbRequests.ClassAddStatusParams.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string index = 2;
 * @return {!Array<string>}
 */
proto.dbRequests.ClassAddStatusParams.prototype.getIndexList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.dbRequests.ClassAddStatusParams} returns this
 */
proto.dbRequests.ClassAddStatusParams.prototype.setIndexList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.dbRequests.ClassAddStatusParams} returns this
 */
proto.dbRequests.ClassAddStatusParams.prototype.addIndex = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dbRequests.ClassAddStatusParams} returns this
 */
proto.dbRequests.ClassAddStatusParams.prototype.clearIndexList = function() {
  return this.setIndexList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dbRequests.AddStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.dbRequests.AddStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dbRequests.AddStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dbRequests.AddStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    statusesMap: (f = msg.getStatusesMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dbRequests.AddStatusResponse}
 */
proto.dbRequests.AddStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dbRequests.AddStatusResponse;
  return proto.dbRequests.AddStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dbRequests.AddStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dbRequests.AddStatusResponse}
 */
proto.dbRequests.AddStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getStatusesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readEnum, null, "", 0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dbRequests.AddStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dbRequests.AddStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dbRequests.AddStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dbRequests.AddStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatusesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeEnum);
  }
};


/**
 * map<string, AddStatus> statuses = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.dbRequests.AddStatus>}
 */
proto.dbRequests.AddStatusResponse.prototype.getStatusesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.dbRequests.AddStatus>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.dbRequests.AddStatusResponse} returns this
 */
proto.dbRequests.AddStatusResponse.prototype.clearStatusesMap = function() {
  this.getStatusesMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dbRequests.ReceiveClassesParams.prototype.toObject = function(opt_includeInstance) {
  return proto.dbRequests.ReceiveClassesParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dbRequests.ReceiveClassesParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dbRequests.ReceiveClassesParams.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dbRequests.ReceiveClassesParams}
 */
proto.dbRequests.ReceiveClassesParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dbRequests.ReceiveClassesParams;
  return proto.dbRequests.ReceiveClassesParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dbRequests.ReceiveClassesParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dbRequests.ReceiveClassesParams}
 */
proto.dbRequests.ReceiveClassesParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dbRequests.ReceiveClassesParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dbRequests.ReceiveClassesParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dbRequests.ReceiveClassesParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dbRequests.ReceiveClassesParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dbRequests.ClassesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dbRequests.ClassesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.dbRequests.ClassesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dbRequests.ClassesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dbRequests.ClassesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    classesList: jspb.Message.toObjectList(msg.getClassesList(),
    proto.dbRequests.Class.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dbRequests.ClassesResponse}
 */
proto.dbRequests.ClassesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dbRequests.ClassesResponse;
  return proto.dbRequests.ClassesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dbRequests.ClassesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dbRequests.ClassesResponse}
 */
proto.dbRequests.ClassesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.dbRequests.Class;
      reader.readMessage(value,proto.dbRequests.Class.deserializeBinaryFromReader);
      msg.addClasses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dbRequests.ClassesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dbRequests.ClassesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dbRequests.ClassesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dbRequests.ClassesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClassesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.dbRequests.Class.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Class classes = 1;
 * @return {!Array<!proto.dbRequests.Class>}
 */
proto.dbRequests.ClassesResponse.prototype.getClassesList = function() {
  return /** @type{!Array<!proto.dbRequests.Class>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dbRequests.Class, 1));
};


/**
 * @param {!Array<!proto.dbRequests.Class>} value
 * @return {!proto.dbRequests.ClassesResponse} returns this
*/
proto.dbRequests.ClassesResponse.prototype.setClassesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.dbRequests.Class=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dbRequests.Class}
 */
proto.dbRequests.ClassesResponse.prototype.addClasses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.dbRequests.Class, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dbRequests.ClassesResponse} returns this
 */
proto.dbRequests.ClassesResponse.prototype.clearClassesList = function() {
  return this.setClassesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dbRequests.Class.repeatedFields_ = [7,9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dbRequests.Class.prototype.toObject = function(opt_includeInstance) {
  return proto.dbRequests.Class.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dbRequests.Class} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dbRequests.Class.toObject = function(includeInstance, msg) {
  var f, obj = {
    level: jspb.Message.getFieldWithDefault(msg, 1, ""),
    school: jspb.Message.getFieldWithDefault(msg, 2, 0),
    department: jspb.Message.getFieldWithDefault(msg, 3, 0),
    classnum: jspb.Message.getFieldWithDefault(msg, 4, 0),
    credits: jspb.Message.getFieldWithDefault(msg, 5, 0),
    name: jspb.Message.getFieldWithDefault(msg, 6, ""),
    codesList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    synopsis: jspb.Message.getFieldWithDefault(msg, 8, ""),
    booksList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    sectionsList: jspb.Message.toObjectList(msg.getSectionsList(),
    proto.dbRequests.Section.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dbRequests.Class}
 */
proto.dbRequests.Class.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dbRequests.Class;
  return proto.dbRequests.Class.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dbRequests.Class} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dbRequests.Class}
 */
proto.dbRequests.Class.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLevel(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSchool(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDepartment(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setClassnum(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCredits(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addCodes(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSynopsis(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addBooks(value);
      break;
    case 10:
      var value = new proto.dbRequests.Section;
      reader.readMessage(value,proto.dbRequests.Section.deserializeBinaryFromReader);
      msg.addSections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dbRequests.Class.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dbRequests.Class.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dbRequests.Class} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dbRequests.Class.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLevel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSchool();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDepartment();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getClassnum();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getCredits();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCodesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getSynopsis();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getBooksList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getSectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.dbRequests.Section.serializeBinaryToWriter
    );
  }
};


/**
 * optional string level = 1;
 * @return {string}
 */
proto.dbRequests.Class.prototype.getLevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dbRequests.Class} returns this
 */
proto.dbRequests.Class.prototype.setLevel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 school = 2;
 * @return {number}
 */
proto.dbRequests.Class.prototype.getSchool = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.dbRequests.Class} returns this
 */
proto.dbRequests.Class.prototype.setSchool = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 department = 3;
 * @return {number}
 */
proto.dbRequests.Class.prototype.getDepartment = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.dbRequests.Class} returns this
 */
proto.dbRequests.Class.prototype.setDepartment = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 classNum = 4;
 * @return {number}
 */
proto.dbRequests.Class.prototype.getClassnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.dbRequests.Class} returns this
 */
proto.dbRequests.Class.prototype.setClassnum = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 credits = 5;
 * @return {number}
 */
proto.dbRequests.Class.prototype.getCredits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.dbRequests.Class} returns this
 */
proto.dbRequests.Class.prototype.setCredits = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string name = 6;
 * @return {string}
 */
proto.dbRequests.Class.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.dbRequests.Class} returns this
 */
proto.dbRequests.Class.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated string codes = 7;
 * @return {!Array<string>}
 */
proto.dbRequests.Class.prototype.getCodesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.dbRequests.Class} returns this
 */
proto.dbRequests.Class.prototype.setCodesList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.dbRequests.Class} returns this
 */
proto.dbRequests.Class.prototype.addCodes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dbRequests.Class} returns this
 */
proto.dbRequests.Class.prototype.clearCodesList = function() {
  return this.setCodesList([]);
};


/**
 * optional string synopsis = 8;
 * @return {string}
 */
proto.dbRequests.Class.prototype.getSynopsis = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.dbRequests.Class} returns this
 */
proto.dbRequests.Class.prototype.setSynopsis = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * repeated string books = 9;
 * @return {!Array<string>}
 */
proto.dbRequests.Class.prototype.getBooksList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.dbRequests.Class} returns this
 */
proto.dbRequests.Class.prototype.setBooksList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.dbRequests.Class} returns this
 */
proto.dbRequests.Class.prototype.addBooks = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dbRequests.Class} returns this
 */
proto.dbRequests.Class.prototype.clearBooksList = function() {
  return this.setBooksList([]);
};


/**
 * repeated Section sections = 10;
 * @return {!Array<!proto.dbRequests.Section>}
 */
proto.dbRequests.Class.prototype.getSectionsList = function() {
  return /** @type{!Array<!proto.dbRequests.Section>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dbRequests.Section, 10));
};


/**
 * @param {!Array<!proto.dbRequests.Section>} value
 * @return {!proto.dbRequests.Class} returns this
*/
proto.dbRequests.Class.prototype.setSectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.dbRequests.Section=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dbRequests.Section}
 */
proto.dbRequests.Class.prototype.addSections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.dbRequests.Section, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dbRequests.Class} returns this
 */
proto.dbRequests.Class.prototype.clearSectionsList = function() {
  return this.setSectionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dbRequests.Section.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dbRequests.Section.prototype.toObject = function(opt_includeInstance) {
  return proto.dbRequests.Section.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dbRequests.Section} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dbRequests.Section.toObject = function(includeInstance, msg) {
  var f, obj = {
    index: jspb.Message.getFieldWithDefault(msg, 1, ""),
    section: jspb.Message.getFieldWithDefault(msg, 2, ""),
    meetingsList: jspb.Message.toObjectList(msg.getMeetingsList(),
    proto.dbRequests.Meeting.toObject, includeInstance),
    instructorsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    available: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    exam: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dbRequests.Section}
 */
proto.dbRequests.Section.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dbRequests.Section;
  return proto.dbRequests.Section.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dbRequests.Section} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dbRequests.Section}
 */
proto.dbRequests.Section.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIndex(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSection(value);
      break;
    case 3:
      var value = new proto.dbRequests.Meeting;
      reader.readMessage(value,proto.dbRequests.Meeting.deserializeBinaryFromReader);
      msg.addMeetings(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addInstructors(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAvailable(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setExam(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dbRequests.Section.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dbRequests.Section.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dbRequests.Section} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dbRequests.Section.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMeetingsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.dbRequests.Meeting.serializeBinaryToWriter
    );
  }
  f = message.getInstructorsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getAvailable();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getExam();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string index = 1;
 * @return {string}
 */
proto.dbRequests.Section.prototype.getIndex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dbRequests.Section} returns this
 */
proto.dbRequests.Section.prototype.setIndex = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string section = 2;
 * @return {string}
 */
proto.dbRequests.Section.prototype.getSection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dbRequests.Section} returns this
 */
proto.dbRequests.Section.prototype.setSection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Meeting meetings = 3;
 * @return {!Array<!proto.dbRequests.Meeting>}
 */
proto.dbRequests.Section.prototype.getMeetingsList = function() {
  return /** @type{!Array<!proto.dbRequests.Meeting>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dbRequests.Meeting, 3));
};


/**
 * @param {!Array<!proto.dbRequests.Meeting>} value
 * @return {!proto.dbRequests.Section} returns this
*/
proto.dbRequests.Section.prototype.setMeetingsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.dbRequests.Meeting=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dbRequests.Meeting}
 */
proto.dbRequests.Section.prototype.addMeetings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.dbRequests.Meeting, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dbRequests.Section} returns this
 */
proto.dbRequests.Section.prototype.clearMeetingsList = function() {
  return this.setMeetingsList([]);
};


/**
 * repeated string instructors = 4;
 * @return {!Array<string>}
 */
proto.dbRequests.Section.prototype.getInstructorsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.dbRequests.Section} returns this
 */
proto.dbRequests.Section.prototype.setInstructorsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.dbRequests.Section} returns this
 */
proto.dbRequests.Section.prototype.addInstructors = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dbRequests.Section} returns this
 */
proto.dbRequests.Section.prototype.clearInstructorsList = function() {
  return this.setInstructorsList([]);
};


/**
 * optional bool available = 5;
 * @return {boolean}
 */
proto.dbRequests.Section.prototype.getAvailable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dbRequests.Section} returns this
 */
proto.dbRequests.Section.prototype.setAvailable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string exam = 6;
 * @return {string}
 */
proto.dbRequests.Section.prototype.getExam = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.dbRequests.Section} returns this
 */
proto.dbRequests.Section.prototype.setExam = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dbRequests.Meeting.prototype.toObject = function(opt_includeInstance) {
  return proto.dbRequests.Meeting.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dbRequests.Meeting} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dbRequests.Meeting.toObject = function(includeInstance, msg) {
  var f, obj = {
    meetingTime: jspb.Message.getFieldWithDefault(msg, 1, ""),
    meetingLocation: jspb.Message.getFieldWithDefault(msg, 2, ""),
    campus: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dbRequests.Meeting}
 */
proto.dbRequests.Meeting.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dbRequests.Meeting;
  return proto.dbRequests.Meeting.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dbRequests.Meeting} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dbRequests.Meeting}
 */
proto.dbRequests.Meeting.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMeetingTime(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMeetingLocation(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCampus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dbRequests.Meeting.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dbRequests.Meeting.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dbRequests.Meeting} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dbRequests.Meeting.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMeetingTime();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMeetingLocation();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCampus();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string meeting_time = 1;
 * @return {string}
 */
proto.dbRequests.Meeting.prototype.getMeetingTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dbRequests.Meeting} returns this
 */
proto.dbRequests.Meeting.prototype.setMeetingTime = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string meeting_location = 2;
 * @return {string}
 */
proto.dbRequests.Meeting.prototype.getMeetingLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dbRequests.Meeting} returns this
 */
proto.dbRequests.Meeting.prototype.setMeetingLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string campus = 3;
 * @return {string}
 */
proto.dbRequests.Meeting.prototype.getCampus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dbRequests.Meeting} returns this
 */
proto.dbRequests.Meeting.prototype.setCampus = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.dbRequests.AddStatus = {
  PENDING: 0,
  ADDED: 1,
  FAILED: 2
};

goog.object.extend(exports, proto.dbRequests);
